# This is an autogenerated function, ported from the original legacy version.
# It /should work/ as is, but will not have all the benefits of the modern
# function API. You should see the function docs to learn how to add function
# signatures for type safety and to document this function using puppet-strings.
#
# https://puppet.com/docs/puppet/latest/custom_functions_ruby.html
#
# ---- original file header ----
#
#  to_tinydns_tai64.rb
#

require 'time'

EPOCH = 2 ** 62
LEAP_SECONDS_AT_EPOCH = 10

# ---- original file header ----
#
# @summary
#       Converts a date/time string to the tai64 timestamp string used by
#    tinydns-data for the time-to-die/starting-time field.
#  
#    Requires a date string that the Time class can parse, i.e. both
#    '2014-03-20 01:14:56+13:00' and '2014-03-20 01:14:56 NZDT' are known 
#    to work.
#
#
Puppet::Functions.create_function(:'dbndns::to_tinydns_tai64') do
  # @param arguments
  #   The original array of arguments. Port this to individually managed params
  #   to get the full benefit of the modern function API.
  #
  # @return [Data type]
  #   Describe what the function returns here
  #
  dispatch :default_impl do
    # Call the method named 'default_impl' when this is matched
    # Port this to match individual params for better type safety
    repeated_param 'Any', :arguments
  end


  def default_impl(*arguments)
    

    raise(Puppet::ParseError, "to_tinydns_tai64(): Wrong number of arguments " +
      "given (#{arguments.size} for 1)") if arguments.size < 1

    datetime = arguments[0]
    klass = datetime.class

    unless [String].include?(klass)
      raise(Puppet::ParseError, 'to_tinydns_tai64(): Requires a ' +
        ' datetime string to work with')
    end

    # Probably needs error handling...
    dt = Time.parse(datetime)

    s = '%016x'
    sec = dt.to_i + LEAP_SECONDS_AT_EPOCH
    ts = if sec >= 0
           sec + EPOCH
         else
           EPOCH - sec
         end
    return s % [ ts ]
  
  end
end
